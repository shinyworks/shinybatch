% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aaa-conditions.R
\name{.with_error_handling}
\alias{.with_error_handling}
\title{Wrap an expression with error handling}
\usage{
.with_error_handling(
  expr,
  message,
  subclass,
  before_error = NULL,
  call = rlang::caller_env(),
  message_env = call
)
}
\arguments{
\item{expr}{(\code{expression}) The expression to evaluate.}

\item{message}{(\code{character}) The message for the new error. Messages will be
formatted with \code{\link[cli:cli_bullets]{cli::cli_bullets()}}.}

\item{subclass}{(\code{character}) Class(es) to assign to the error. Will be
prefixed by "shinybatch-error-".}

\item{before_error}{(\code{expression} or \code{NULL}) An expression to run before
aborting, typically for cleanup.}

\item{call}{(\code{environment}) The execution environment to mention as the
source of error messages.}

\item{message_env}{(\code{environment}) The execution environment to use to
evaluate variables in error messages.}
}
\value{
The result of \code{expr} if successful.
}
\description{
A wrapper around \code{\link[rlang:try_fetch]{rlang::try_fetch()}} that allows for cleanup code to be run
before re-throwing an error with \code{\link[=.shinybatch_abort]{.shinybatch_abort()}}.
}
\keyword{internal}
