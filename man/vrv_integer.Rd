% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vrv_integer.R
\name{vrv_integer}
\alias{vrv_integer}
\alias{vrv_integer_scalar}
\title{Create a validated reactive integer vector}
\usage{
vrv_integer(
  value = NULL,
  default = NULL,
  allow_null = TRUE,
  allow_na = TRUE,
  min_size = NULL,
  max_size = NULL,
  coerce_character = TRUE,
  coerce_factor = TRUE,
  min_value = NULL,
  max_value = NULL,
  label = NULL,
  env = rlang::caller_env()
)

vrv_integer_scalar(
  value = NULL,
  default = NULL,
  label = NULL,
  allow_null = TRUE,
  allow_zero_length = TRUE,
  allow_na = TRUE,
  coerce_character = TRUE,
  coerce_factor = TRUE,
  min_value = NULL,
  max_value = NULL,
  env = rlang::caller_env()
)
}
\arguments{
\item{value}{(various) The initial value. This value will be coerced via the
validation expression when accessed. If this value is reactive, an observer
with \code{priority = Inf} will be created to attempt to keep the validated
value in sync with that reactive.}

\item{default}{(various, including \code{expression} or \verb{reactive expression}) A
value to use when the current value is not valid according to the defined
rules. Defaults to \code{NULL}.}

\item{allow_null}{(length-1 \code{logical}, \code{expression}, or \verb{reactive expression}) Is \code{NULL} an acceptable value?}

\item{allow_na}{(length-1 \code{logical}, \code{expression}, or \verb{reactive expression})
Are \code{NA} values okay?}

\item{min_size}{(length-1 \code{integer}, \code{expression}, or \verb{reactive expression})
The minimum size of the vector.}

\item{max_size}{(length-1 \code{integer}, \code{expression}, or \verb{reactive expression})
The maximum size of the vector.}

\item{coerce_character}{(length-1 \code{logical}, \code{expression}, or \verb{reactive expression}) Should character vectors such as \code{"1"} and \code{"2.0"} be coerced
to integer?}

\item{coerce_factor}{(length-1 \code{logical}, \code{expression}, or \verb{reactive expression}) Should factors with values such as \code{"1"} and \code{"2.0"} be
coerced to integer? Note that this function uses the character value from
the factor, while \code{as.integer()} uses the integer index of the factor.}

\item{min_value}{(length-1 \code{integer}, \code{expression}, or \verb{reactive expression},
or \code{NULL}) The lowest allowed value for \code{x}. If \code{NULL} (default) values are
not checked.}

\item{max_value}{(length-1 \code{integer}, \code{expression}, or \verb{reactive expression},
or \code{NULL}) The highest allowed value for \code{x}. If \code{NULL} (default) values
are not checked.}

\item{label}{(length-1 \code{character} or \code{NULL}) An optional label for the
\code{validated_reactive_value}, used for debugging.}

\item{env}{(\code{environment}) The environment in which to evaluate the
\code{validation_expr}.}

\item{allow_zero_length}{(length-1 \code{logical}, \code{expression}, or \verb{reactive expression}) Is a zero-length vector acceptable?}
}
\value{
A \code{vrv} object which returns a validated integer vector.
}
\description{
A wrapper around \code{\link[=validated_reactive_val]{validated_reactive_val()}} that uses \code{\link[stbl:stabilize_int]{stbl::stabilize_int()}}
to validate and coerce its value. This is a convenience function that
constructs the \code{validation_expr} for you.
}
