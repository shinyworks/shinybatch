% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batch_orchestrator.R
\name{batch_orchestrator}
\alias{batch_orchestrator}
\title{Create a manager for a batch of reactive values}
\usage{
batch_orchestrator(validation_flow = list(), timeout = 5L)
}
\arguments{
\item{validation_flow}{(named \code{list} of \code{function}s) A named list that
defines the validation logic for the batch. The name of each element should
correspond to the \code{name} of a \code{\link[=batch_reactive_val]{batch_reactive_val()}} which will be included
in the batch. Each function must accept two arguments: its own proposed
value, and a named list of all proposed values in the batch. The function
should return the final, validated value. The order of this list is
important, as it determines the execution order of the validation cascade.
By default, the orchestrator is initialized with an empty list, and
validation functions are added as values are added to this batch.}

\item{timeout}{(length-1 \code{integer}) The maximum number of seconds to wait
for a transaction to complete.}
}
\value{
An object of class \code{BatchOrchestrator} to be passed to the
\code{orchestrator} argument of \code{\link[=batch_reactive_val]{batch_reactive_val()}}.
}
\description{
Creates an orchestrator to manage a group of related \code{\link[=batch_reactive_val]{batch_reactive_val()}}s.
This is an advanced function; in most cases, an orchestrator will be created
automatically by the first call to \code{\link[=batch_reactive_val]{batch_reactive_val()}} in a batch.
}
